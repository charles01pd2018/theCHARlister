// dependencies
@use 'sass:map';
// constants
@use '../constants/colors' as *;


.palette {
    // Read more about this function here: https://yoavik.com/snippets/3d-text
    @function extrude($layers, $color1, $color2) {
        $spread: 0.05rem;
        $scatter: 0.01;
        $gap: 0.02;
        $value: 0 0 $spread $color1;

        @for $i from 1 through $layers {
            $value: #{$value}, #{($i * -2 - 1) * $gap - $scatter}rem #{($i * 2 - 1) * $gap - $scatter}rem $spread #{$color1};
            $value: #{$value}, #{$i * -2 * $gap + $scatter}rem #{$i * 2 * $gap + $scatter}rem $spread #{$color2};
        }

        @return $value;
    }

    $transition: 0.25s ease;
  
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    padding: 2vw;
    border-radius: 4rem;
    transform: rotateX(50deg) rotateZ(-45deg);
    
    @each $color, $color-map in $colors {
        &.#{$color} {
            background: map.get( $color-map, 1 );
            box-shadow: -0.1rem 0.1rem 0.05rem rgb(255 255 255 / 20%),
                        extrude(20, map.get( $color-map, 3 ), hsl(284 8% 12%)),
                        -0.9rem 0.9rem 0.5rem rgba(0, 0, 0, 0.5);
        }
    }

    .icon-wrapper {
        --dx: -0.4rem;
        --dy: 0.5rem;

        transform: translate(0.5rem, -0.5rem);
        transition: transform $transition;
        
        &:hover {
            --dx: -0.7rem;
            --dy: 0.8rem;
            transform: translate(0.8rem, -0.8rem);
        }
        
        img {
            margin: 3vw;
            transition: filter $transition;
            will-change: filter;
            filter: drop-shadow(0 0 0.03rem hsl(284deg, 22%, 50%))
                    drop-shadow(-0.1rem 0.15rem 0 hsl(284deg, 22%, 30%))
                    drop-shadow(var(--dx) var(--dy) 0.2rem hsl(0deg 0% 0% / 30%))
                    drop-shadow(-0.2rem 0.3rem 0.2rem hsl(284deg 52% 77% / 20%));
        }
    }
}