// dependencies
@use 'sass:map';
// constants
@use '../constants/colors' as *;
@use '../constants/breakpoints' as *;
// utils
@use '../utils/selectors/tap' as *;


.project-preview {
    $transition-timing: 0.75s;
    $border-radius: 8px;

    position: relative;
    mix-blend-mode: multiply;

    .image {
        // matches time of _StaggeredText transition
        $transition: $transition-timing cubic-bezier( 0.38, 0.26, 0.05, 1.07 );

        border-radius: $border-radius;
        pointer-events: none;
        max-width: 90vw;
        
        box-shadow: 0px 0.4px 2.2px rgba(0, 0, 0, 0.02),
                    0px 1px 5.3px rgba(0, 0, 0, 0.028),
                    0px 1.9px 10px rgba(0, 0, 0, 0.035),
                    0px 3.4px 17.9px rgba(0, 0, 0, 0.042),
                    0px 6.3px 33.4px rgba(0, 0, 0, 0.05),
                    0px 15px 80px rgba(0, 0, 0, 0.07);

        transition: box-shadow $transition,
                    filter $transition;
    }

    .overlay {
        position: absolute;
        top: 0;
        width: 100%;
        background: rgba(0,0,0,0.5);
        border-radius: $border-radius;
        transform-origin: left;
        transform: scaleX( 0 );

        transition: transform 0.5s cubic-bezier(0.66, 0.08, 0.19, 0.97);

        .text-wrapper {
            position: absolute;
            bottom: 0;
            padding-inline: 1rem;
            padding-block: 2rem 5rem;
            color: white;
        }

        &:after {
            $transition: 0.21s ease-in-out;

            content: 'âžœ';
            position: absolute;
            bottom: 1rem;
            right: 1rem;
            font-size: 180%;
            opacity: 0;
            transform: translateY( 5px );
            // idk why i need !important
            transition-delay: $transition-timing !important;

            transition: opacity $transition,
                        transform $transition;
        }
    }

    @each $color, $color-map in $colors {
        &.#{$color} {
            $color: map.get( $color-map, 1 );

            .overlay {
                .text-wrapper {
                    h1, h2, h3,
                    h4, h5, h6 {
                        margin-block: 3rem;
                        text-shadow: $color 0 0 15px;
                    }
                }

                &:after {
                    color: $color;
                }
            }
        }
    }

    @include tap {
        .overlay {
            transform: scaleX(1);

            .text-wrapper {
                span {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            &:after {
                opacity: 1;
                transform: translateY( 0 );
            }
        }

        .image {
            filter: blur( 5px );
            box-shadow: white 0 5.5vw 5vw -7.5vw,
                        rgba(50, 50, 80, 0.3) 0 5.5vw 5vw -7.5vw,
                        rgba(50, 50, 80, 0.5) 0px 4vw 8vw -2vw, 
                        rgba(0, 0, 0, 0.8) 0px 4vw 5vw -3vw;

        }
    }

    @media( max-width: $breakpoint--extra-small ) {
        .overlay {
            .text-wrapper {
                padding-block: 1rem 3rem;

                h1, h2, h3,
                h4, h5, h6 {
                    margin-block: 1rem;
                }
            }
        }
    }
}